source('~/Desktop/Data Visualization with ggplot2 (Part 2)/4 Best Practices/Bar plots.R', echo=TRUE)
# Base layers
m <- ggplot(mtcars, aes(x = factor(cyl), y = wt))
# Draw dynamite plot
m +
stat_summary(fun.y = mean, geom = "bar", fill = "skyblue") +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = "errorbar", width = 0.1)
source('~/Desktop/Data Visualization with ggplot2 (Part 2)/4 Best Practices/Bar plots.R', echo=TRUE)
# Bar plots (3)
# Base layers
m <- ggplot(mtcars.cyl, aes(x = cyl, y = wt.avg))
# Plot 1: Draw bar plot
m + geom_bar(stat = "identity", fill = "skyblue")
# Plot 2: Add width aesthetic
m + geom_bar(aes(width = prop), stat = "identity", fill = "skyblue")
# Plot 3: Add error bars
m + geom_bar(aes(width = prop), stat = "identity", fill = "skyblue") +
geom_errorbar(aes(ymin  =wt.avg - sd, ymax = wt.avg + sd), width = 0.1)
# Load the ggplot2 package
library(ggplot2)
# Change cyl inside mtcars to a factor
mtcars$cyl <- as.factor(mtcars$cyl)
# Change am inside mtcars to a factor
mtcars$am <- as.factor(mtcars$am)
# Bar plots (3)
# Base layers
m <- ggplot(mtcars.cyl, aes(x = cyl, y = wt.avg))
# Plot 1: Draw bar plot
m + geom_bar(stat = "identity", fill = "skyblue")
# Plot 2: Add width aesthetic
m + geom_bar(aes(width = prop), stat = "identity", fill = "skyblue")
# Plot 3: Add error bars
m + geom_bar(aes(width = prop), stat = "identity", fill = "skyblue") +
geom_errorbar(aes(ymin  =wt.avg - sd, ymax = wt.avg + sd), width = 0.1)
# Bar plots (3)
# Load the mtcars.cyl dataset
mtcars.cyl <- read_delim("../mtcars_cyl.txt", delim = "/")
# Bar plots (3)
# Load the readr package
library(readr)
# Load the mtcars.cyl dataset
mtcars.cyl <- read_delim("../mtcars_cyl.txt", delim = "/")
View(mtcars.cyl)
# Base layers
m <- ggplot(mtcars.cyl, aes(x = cyl, y = wt.avg))
# Plot 1: Draw bar plot
m + geom_bar(stat = "identity", fill = "skyblue")
# Plot 2: Add width aesthetic
m + geom_bar(aes(width = prop), stat = "identity", fill = "skyblue")
# Plot 3: Add error bars
m + geom_bar(aes(width = prop), stat = "identity", fill = "skyblue") +
geom_errorbar(aes(ymin  =wt.avg - sd, ymax = wt.avg + sd), width = 0.1)
source('~/Desktop/Data Visualization with ggplot2 (Part 2)/4 Best Practices/Pie charts.R', echo=TRUE)
source('~/Desktop/Data Visualization with ggplot2 (Part 2)/4 Best Practices/Pie charts.R', echo=TRUE)
source('~/Desktop/Data Visualization with ggplot2 (Part 2)/4 Best Practices/Pie charts.R', echo=TRUE)
source('~/Desktop/Data Visualization with ggplot2 (Part 2)/4 Best Practices/Pie charts.R', echo=TRUE)
source('~/Desktop/Data Visualization with ggplot2 (Part 2)/4 Best Practices/Pie charts.R', echo=TRUE)
install.packages("GGally")
# Pie charts (2)
# Parallel coordinates plot using GGally
library(GGally)
# All columns except am
group_by_am <- which(colnames(mtcars) == "am")
my_names_am <- (1:11)[-group_by_am]
# Basic parallel plot - each variable plotted as a z-score transformation
ggparcoord(mtcars, my_names_am, groupColumn = group_by_am, alpha = 0.8)
source('~/Desktop/Data Visualization with ggplot2 (Part 2)/4 Best Practices/Heat maps.R', echo=TRUE)
source('~/Desktop/Data Visualization with ggplot2 (Part 2)/4 Best Practices/Heat maps.R', echo=TRUE)
source('~/Desktop/Data Visualization with ggplot2 (Part 2)/4 Best Practices/Heat maps.R', echo=TRUE)
# Heat Maps Alternatives (1)
# Line plots
ggplot(barley, aes(x = year, y = yield, col = variety, group = variety)) +
geom_line() +
facet_wrap( ~ site, nrow = 1)
# Heat Maps Alternatives (2)
# Create overlapping ribbon plot from scratch
ggplot(barley, aes(x = year, y = yield, group = site, col = site, fill = site)) +
geom_line() +
stat_summary(fun.y = mean, geom = "line") +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = "ribbon", col = NA, alpha = 0.1)
str(barley)
??CHIS
??chis2009
??matcars
??barley
